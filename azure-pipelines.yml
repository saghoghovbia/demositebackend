# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
- task: CopyFiles@2
  inputs:
    contents: '**/*.jar'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure subscription 1 (84ff124c-e2ae-44a4-8aac-f38d15a5a436)'
    appType: 'webAppLinux'
    appName: 'ts-luxury-cars-back-end'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'

    runtimeStack: 'JAVA|11-java11'
    startUpCommand: 'java -jar ts-luxury-cars-back-end-0.0.1-SNAPSHOT.jar'